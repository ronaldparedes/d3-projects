{"version":3,"sources":["webpack:///./src/components/goldielocksViz.js","webpack:///./src/pages/goldielocks.js"],"names":["runViz","async","dataset","d3","xAccessor","d","hzd","yAccessor","mass","rAccessor","radius","tempColor","name","color","desc","dimensions","width","height","margin","top","right","bottom","left","boundedWidth","boundedHeight","bounds","append","attr","style","xScale","domain","range","yScale","nice","rScale","planets","selectAll","data","enter","yAxisGen","scale","yAxis","call","tickValues","tickFormat","remove","yAxisTickLabels","text","yGrid","tickSize","xAxisGen","xGrid","xAxisLabels","i","html","forEach","planetName","labledPlanet","filter","e","node","x","attributes","cx","value","y","cy","r","tooltip","on","this","datum","select","StyledViz","styled","div","Height","header","Goldielocks","useEffect","console","log","theme","backgroundColor","className","href","id"],"mappings":"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","file":"component---src-pages-goldielocks-js-398e97048b569b6e1523.js","sourcesContent":["import * as d3 from \"d3\"\n\nasync function runViz() {\n  // 1. Access Data\n  const dataset = await d3.csv(\"./planets.csv\")\n  const xAccessor = d => +d.hzd\n  const yAccessor = d => +d.mass\n  const rAccessor = d => +d.radius\n  const nameAccessor = d => d.name\n  const tempColor = [\n    {\n      name: \"too hot\",\n      color: \"#f0563f\",\n      desc:\n        \"On planets orbiting close to their respective suns, surface water evaporates into space.\",\n    },\n    {\n      name: \"just right\",\n      color: \"#a7c039\",\n      desc:\n        \"Any water present on a planet orbiting here can remain liquid, given the right atmospheric pressure.\",\n    },\n    {\n      name: \"too cold\",\n      color: \"#0a9c9d\",\n      desc:\n        \" Here planets orbit far from their suns, so any surface water remains frozen.\",\n    },\n  ]\n  // 2. Create Chart Dimensions\n  const dimensions = {\n    width: 960,\n    height: 1160,\n    margin: {\n      top: 60,\n      right: 50,\n      bottom: 50,\n      left: 50,\n    },\n  }\n  dimensions.boundedWidth =\n    dimensions.width - dimensions.margin.left - dimensions.margin.right\n  dimensions.boundedHeight =\n    dimensions.height - dimensions.margin.top - dimensions.margin.bottom\n\n  // 3. Draw Canvas\n  const wrapper = d3\n    .select(\"#wrapper\")\n    .append(\"svg\")\n    .attr(\"width\", dimensions.width)\n    .attr(\"height\", dimensions.height)\n  const bounds = wrapper\n    .append(\"g\")\n    .attr(\"id\", \"bounds\")\n    .style(\n      \"transform\",\n      `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`\n    )\n  // 4. Create Scales\n  const xScale = d3\n    .scaleLinear()\n    .domain(d3.extent(dataset, xAccessor))\n    .range([dimensions.margin.left, dimensions.boundedWidth])\n  const yScale = d3\n    .scaleLog()\n    .domain(d3.extent(dataset, yAccessor))\n    .range([0, dimensions.boundedHeight])\n    .nice()\n  const rScale = d3\n    .scaleSqrt()\n    .domain(d3.extent(dataset, rAccessor))\n    .range([3.2, 24])\n  // .range([3.2304221661137325, 23.921332344869043]);\n  // .range([5, 30]);\n\n  // 5. Draw Data\n  const planets = bounds\n    .selectAll(\"circle\")\n    .data(dataset)\n    .enter()\n    .append(\"circle\")\n    .attr(\"class\", \"planet\")\n    .attr(\"cx\", d => xScale(xAccessor(d)))\n    .attr(\"cy\", d => yScale(yAccessor(d)))\n    .attr(\"r\", d => rScale(rAccessor(d)))\n    .style(\"fill\", d => {\n      if (xAccessor(d) < -1) {\n        return tempColor[0].color\n      } else if (xAccessor(d) < 1) {\n        return tempColor[1].color\n      } else {\n        return tempColor[2].color\n      }\n    })\n\n  // 6. Draw Peripherals\n  const yAxisGen = d3.axisLeft().scale(yScale)\n  const yAxis = bounds\n    .append(\"g\")\n    .call(\n      yAxisGen\n        .tickValues([0.1, 1, 10, 100, 1000, 10000])\n        .tickFormat(d3.format(\",.5\"))\n    )\n    .style(\"color\", \"#aaa\")\n  yAxis.selectAll(\".domain\").remove()\n\n  const yAxisTickLabels = yAxis.selectAll(\".tick\")\n  yAxisTickLabels\n    .append(\"text\")\n    .attr(\"class\", \"y-axis-label\")\n    .text(d => (d < 1 ? \"earth's\" : \"earth\"))\n    .attr(\"fill\", \"currentColor\")\n    .attr(\"x\", -9)\n    .attr(\"dy\", \"1.8em\")\n  yAxisTickLabels\n    .append(\"text\")\n    .attr(\"class\", \"y-axis-label\")\n    .text(d => (d <= 1 ? \"mass\" : \"masses\"))\n    .attr(\"fill\", \"currentColor\")\n    .attr(\"x\", -9)\n    .attr(\"dy\", \"3.2em\")\n\n  const yGrid = bounds\n    .append(\"g\")\n    .call(\n      yAxisGen.tickValues([0.1, 10, 1000]).tickSize(dimensions.boundedWidth)\n    )\n    .style(\"color\", \"#aaa\")\n    .style(\"transform\", `translateX(${dimensions.boundedWidth}px)`)\n  yGrid.selectAll(\".tick > line\").attr(\"stroke-dasharray\", \"1,3\")\n  yGrid.selectAll(\".domain, text\").remove()\n\n  const xAxisGen = d3\n    .axisTop()\n    .scale(xScale)\n    .tickValues([-1, 1])\n    .tickSize(dimensions.boundedHeight)\n\n  const xGrid = bounds\n    .append(\"g\")\n    .call(xAxisGen)\n    .style(\"color\", \"#aaa\")\n    .style(\"transform\", `translateY(${dimensions.boundedHeight}px)`)\n  xGrid.selectAll(\".domain\").remove()\n  xGrid.selectAll(\".tick > text\").remove()\n  xGrid.selectAll(\".tick > line\").attr(\"stroke-dasharray\", \"1,3\")\n\n  const xAxisLabels = d3\n    .select(\".x-axis-label-group\")\n    .selectAll(\"div\")\n    .data(tempColor)\n    .enter()\n    .append(\"div\")\n    .attr(\"class\", \"x-axis-label\")\n    .style(\"width\", () => `${xScale(-1) * 0.85}px`)\n    .style(\n      \"transform\",\n      (d, i) => `translateX(${i * xScale(-1) + dimensions.margin.left}px)`\n    )\n\n  xAxisLabels\n    .append(\"h3\")\n    .html(d => d.name)\n    .style(\"color\", d => d.color)\n  xAxisLabels.append(\"p\").html(d => d.desc)\n\n  const lifeBox = bounds\n    .append(\"rect\")\n    .attr(\"id\", \"lifeBox\")\n    .attr(\"x\", xScale(-1))\n    .attr(\"y\", yScale(0.1))\n    .attr(\"width\", xScale(1) - xScale(-1))\n    .attr(\"height\", yScale(10) - yScale(0.1))\n    .style(\"transform\", \"translate(0.5px, 0.5px)\")\n\n  const labeledPlanets = [\"Earth\", \"Mars\", \"Venus\", \"Mercury\", \"Kepler-186f\"]\n  labeledPlanets.forEach(planetName => {\n    const labledPlanet = planets\n      .filter(e => nameAccessor(e) === planetName)\n      .node()\n    const x = +labledPlanet.attributes.cx.value\n    const y = +labledPlanet.attributes.cy.value\n    const r = +labledPlanet.attributes.r.value\n    const planetLabel = bounds\n      .append(\"text\")\n      .text(planetName)\n      .attr(\"class\", \"planet-label\")\n      .style(\"transform\", `translate(${x + r + 5}px, ${y}px)`)\n  })\n\n  //* 7. Setup interactions\n  const tooltip = d3.select(\".tooltip\")\n  function onMouseOver() {\n    const r = +this.attributes.r.value\n    const x = +this.attributes.cx.value + dimensions.margin.left + r\n    const y = +this.attributes.cy.value + dimensions.margin.top - r\n    tooltip.style(\"opacity\", 1)\n    const { name, radius, mass } = d3.select(this).datum()\n    tooltip.select(\".name\").html(name)\n    tooltip.select(\".radius\").html(radius + \"x Earth's radius\")\n    tooltip.select(\".mass\").html(mass + \"x Earth's mass\")\n    tooltip.style(\"transform\", `translate(${x}px, calc(-100% + ${y}px))`)\n  }\n  function onMouseLeave() {\n    tooltip.style(\"opacity\", 0)\n  }\n  bounds.selectAll(\".planet\").on(\"mouseover\", onMouseOver)\n  bounds.selectAll(\".planet\").on(\"mouseleave\", onMouseLeave)\n}\n\nexport default runViz\n","import React, { useEffect } from \"react\"\nimport Layout from \"../components/layout\"\nimport styled from \"styled-components\"\nimport runViz from \"../components/goldielocksViz\"\nimport { Height } from \"../styles/variables\"\n\nconst StyledViz = styled.div`\n  background-color: black;\n  display: inline-block;\n  padding-top: ${Height.header};\n  font-family: Arial, Helvetica, sans-serif;\n  #wrapper {\n    position: relative;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .description {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: #aaa;\n    width: 100%;\n    a {\n      color: #a1ecf7;\n      text-decoration: none;\n    }\n    & h1 {\n      font-family: \"Neue Helvetica W02\", \"Helvetica Neue\", Helvetica, Arial,\n        sans-serif;\n      font-weight: 200;\n    }\n    & p {\n      max-width: 720px;\n    }\n    .credit {\n      color: white;\n    }\n    & span {\n      color: grey;\n      font-size: small;\n    }\n  }\n  .tooltip {\n    opacity: 0;\n    position: absolute;\n    display: inline-block;\n    background-color: rgba(255, 255, 255, 0.5);\n    padding: 5px;\n    pointer-events: none;\n    color: black;\n    transition: opacity 200ms ease-in;\n  }\n  .name {\n    text-transform: uppercase;\n    font-size: 1.2em;\n    font-weight: 300;\n  }\n  .radius,\n  .mass {\n    font-size: 0.9em;\n  }\n  .planet {\n    stroke: white;\n    stroke-width: 0.4;\n    fill-opacity: 0.6;\n    &:hover {\n      stroke: pink;\n      stroke-width: 1;\n    }\n  }\n  .planet-label {\n    font-size: 0.8em;\n    fill: #aaa;\n    text-transform: lowercase;\n    font-variant: small-caps;\n    dominant-baseline: middle;\n  }\n  #lifeBox {\n    fill: none;\n    stroke: white;\n    stroke-width: 2;\n  }\n  .y-axis-label {\n    text-transform: uppercase;\n  }\n  .x-axis-label-group {\n    position: absolute;\n    color: #aaa;\n  }\n  .x-axis-label {\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    position: absolute;\n    margin-left: 0.8em;\n  }\n  .x-axis-label h3 {\n    text-transform: uppercase;\n    font-weight: 300;\n    font-size: 16px;\n  }\n  .x-axis-label p {\n    font-size: 13px;\n  }\n`\n\nexport default function Goldielocks() {\n  useEffect(() => {\n    console.log(\"Running effect\")\n    runViz()\n  }, [])\n  return (\n    <Layout theme={{ backgroundColor: \"black\" }}>\n      <StyledViz>\n        <div className=\"description\">\n          <p className=\"credit\">\n            The Vizualization below is a recreation in D3 of the Goldielocks\n            Worlds article published by the National Geographic:\n            <a href=\"https://www.nationalgeographic.com/astrobiology/goldilocks-worlds/\">\n              &nbsp;Goldielocks Worlds&nbsp;\n            </a>\n            <br />\n          </p>\n          <h1>GOLDILOCKS WORLDS: JUST RIGHT FOR LIFE?</h1>\n          <p>\n            Of the 1,780 confirmed planets beyond our solar system, as many as\n            16 are located in their star’s habitable zone, where conditions are\n            neither too hot nor too cold to support life. Size also matters: A\n            planet that’s too small can’t maintain an atmosphere; one that’s too\n            large will have a crushing atmosphere. A recently detected planet\n            493 light-years from Earth, Kepler-186f, is close to Earth's size\n            and is located in its solar system's habitable zone.\n          </p>\n        </div>\n        <div id=\"wrapper\">\n          <div className=\"x-axis-label-group\"></div>\n          <div className=\"tooltip\">\n            <div className=\"name\"></div>\n            <div className=\"radius\"></div>\n            <div className=\"mass\"></div>\n          </div>\n        </div>\n      </StyledViz>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}